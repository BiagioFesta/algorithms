language: cpp
os: linux
dist: bionic
sudo: required

env:
  - BUILD_TYPE="Debug"
    C_COMPILER="clang"
    CXX_COMPILER="clang++"
    COMPILATION_FLAGS="-fprofile-instr-generate -fcoverage-mapping"


before_install:
  - sudo apt-get update
  - sudo apt-get install -y curl wget tar xz-utils git make valgrind python3 python3-pip python-pip python3-setuptools cmake clang

install:
  - sudo pip install conan

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build
  - cd build
  - conan remote add conan-mpusz https://api.bintray.com/conan/mpusz/conan-mpusz
  - CC=${C_COMPILER}; CXX=${CXX_COMPILER};
         conan install .. --settings build_type=${BUILD_TYPE}
                          --settings compiler=clang
                          --settings compiler.libcxx=libstdc++11
                          --build missing
  - cmake -G "Unix Makefiles"
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          -DCMAKE_C_COMPILER=${C_COMPILER}
          -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
          -DCMAKE_C_FLAGS="${COMPILATION_FLAGS}"
          -DCMAKE_CXX_FLAGS="${COMPILATION_FLAGS}"
          -DCMAKE_EXPORT_COMPILE_COMMANDS=YES
          -DBUILD_BENCHMARK=YES
          ..
  - make
  - ctest
  - valgrind ./bin/algorithms_test

after_success:
  - llvm-profdata merge -sparse default.profraw -o default.profdata
  - llvm-cov report ./bin/algorithms_test -instr-profile=default.profdata
  - llvm-cov show ./bin/algorithms_test -instr-profile=default.profdata > coverage.txt
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

